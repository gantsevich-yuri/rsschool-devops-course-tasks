pipeline {
    triggers {
        pollSCM('H/1 * * * *') 
    }

    agent {
        kubernetes {
            yaml """
            apiVersion: v1
            kind: Pod
            spec:
              containers:
                - name: jnlp
                  image: jenkins/inbound-agent:3309.v27b_9314fd1a_4-6

                - name: python
                  image: python:3.13
                  command: ["cat"]
                  tty: true

                - name: docker
                  image: docker:28
                  command: ["cat"]
                  tty: true
                  volumeMounts:
                    - name: docker-sock
                      mountPath: /var/run/docker.sock
              volumes:
                - name: docker-sock
                  hostPath:
                    path: /var/run/docker.sock
                    type: Socket
            """
        }
    }

    stages {
         stage('Checkout') {
            steps {
                git(
                    url: 'https://github.com/gantsevich-yuri/rsschool-devops-course-tasks.git',
                    branch: 'task_6',
                    credentialsId: 'github-token'
                )
            }
        }

        stage('Build App') {
            steps {
                container('python') {
                    sh 'pip install -r deployment/my-app/requirements.txt --break-system-packages'
                }
            }
        }

        stage('Test App') {
            steps {
                container('python') {
		    dir('deployment/my-app') {
                        sh 'pytest test.py'
	            }
                }
            }
        }
        /*
        stage('SonarQube test') {
            //
        }
	*/
        stage('Docker biuld') {
            steps {
                container('docker') {
		    dir('deployment/my-app') {
                        sh 'docker build . -t my-flask-app:v$BUILD_NUMBER'
		    }
                }
            }
        }
    }
}
